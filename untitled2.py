# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Oz1Yn2QqnKdY7qOCgWeGeFkra9TOm-UO
"""

from tensorflow.python.keras.layers import Dropout, Flatten, Dense
import tensorflow as tf
from tensorflow.keras.preprocessing.image import load_img, img_to_array
import numpy as np
import matplotlib.pyplot as plt
import flask

app = flask.Flask(__name__)

# Размеры изображения
SIZE = 224

def resize_image(img):
    img = tf.image.resize(img, (SIZE, SIZE))
    img = tf.cast(img, tf.float32)
    img = img / 255.0
    return img

base_layers = tf.keras.applications.MobileNetV2(input_shape=(SIZE, SIZE, 3), include_top=False)
base_layers.trainable = False

model = tf.keras.Sequential([
    base_layers,
    Flatten(),
    Dense(256, activation="relu"),
    Dropout(0.5),
    Dense(128, activation="relu"),
    Dropout(0.5),
    Dense(64, activation="relu"),
    Dropout(0.5),
    Dense(1, activation="sigmoid"),
    ])

model.load_weights('test.h5')

for i in range(1):
    img = load_img('image.jpg')
    img_array = img_to_array(img)
    img_resized = resize_image(img_array)
    img_expended = np.expand_dims(img_resized, axis=0)
    prediction = model.predict(img_expended)[0][0]
    pred_label = 'Damage' if prediction < 0.5 else 'Whole'
    plt.figure()
    plt.imshow(img)
    plt.title(f'{pred_label}')
    plt.show()
    print(pred_label)
